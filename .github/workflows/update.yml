name: Weekly Python Tasks (Linux)

permissions:
  contents: read
  pages: write
  id-token: write

on:
  schedule:
    - cron: '0 18 * * 1'  # every Sunday at midnight UTC
  workflow_dispatch:  # optional manual trigger

jobs:
  run-linux-scripts:
    runs-on: ubuntu-latest
    env:
      FACEIT_API_KEY: ${{ secrets.FACEIT_API_KEY }}

    steps:
      # 1️⃣ Checkout repo
      - uses: actions/checkout@v3

      # Step to get the latest artifact run ID
      # Fetch the latest artifact run ID using GitHub API and jq
      # Save the run ID as an environment variable
      # If your repository is set to private, an OAuth app token or personal access token (classic) with repo scope is required
      - name: Get latest artifact run id
        run: |
            ARTIFACT_RUN_ID=$(curl -s "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=1" | jq '.artifacts[0].workflow_run.id')
            echo "artifact_run_id=$ARTIFACT_RUN_ID" >> $GITHUB_ENV

      # Download the artifact (our SQLite DB!) from the last run
      - name: Download sqlite artifact
        uses: actions/download-artifact@v4
        with:
            name: sqlite-db
            path: .
            run-id: ${{ env.artifact_run_id }} # Run ID of the artifact (SQLite DB) uploaded from the last run
            github-token: ${{ secrets.GH_PAT  }} # REQUIRED. See https://github.com/actions/download-artifact?tab=readme-ov-file#download-artifacts-from-other-workflow-runs-or-repositories
        continue-on-error: true # Set this to false after the first run

      - name: Download pages artifact
        uses: actions/download-artifact@v4
        with:
            name: github-pages
            path: ./docs/
            run-id: ${{ env.artifact_run_id }} 
            github-token: ${{ secrets.GH_PAT  }}
        continue-on-error: true
      
      # 3️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5️⃣ Run sync.py
      - name: Run sync.py
        run: |
          echo "[1/2] Running sync.py..."
          python sync.py
        shell: bash
        continue-on-error: false

      # 6️⃣ Run html_gen.py
      - name: Run html_gen.py
        run: |
          echo "[2/2] Generating HTML..."
          python html_gen.py
        shell: bash
        continue-on-error: false

      - name: Upload updated artifact
        uses: actions/upload-artifact@v4
        with:
            name: sqlite-db
            path: pappaliiga.db
            if-no-files-found: error

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'docs/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
